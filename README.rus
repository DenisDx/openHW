# openHW
==================
ATTENTION! THE MAIN DOCUMENT IS IN ENGLISH! THERE IS NO GUARANTEE THAT THIS TRANSLATION IS CORRECT!
ВНИМАНИЕ!!! ОСНОВНОЙ ДОКУМЕНТ - НА АНГЛИЙСКОМ ЯЗЫКЕ! НЕТ ГАРАНТИИ ЧТО ЭТОТ ПЕРЕВОД ПРАВИЛЬНЫЙ!

Open hardware wallet. Supports Arduino AVR / ESP/ STM chips (atmega328 included), Emercoin / Bitcoin / Ethereum etc compatible


openHW это проект, ставящий своей целью разработку универсального программного кода аппаратного кошелька, поддерживающего широкий спект компьютерных чипов (в том числе и самых слабых)
Тем не менее, для сохранения секретных данных используется достаточно сильная криптография, которая при правильном использовании обеспечит безопасность данных на промышленном уровне.

Одним из сценариев использования этого кода является ситуация, когда конечный пользователь сам приобретает устройство, совместимое с кодом, и самостоятельно прошивает его.
Альтернативой может быть покупка устройства, специально сдизайнированного для использования с этой прошивкой, но с последующей перепрошивкой кода самим пользователем.

Этот важный пункт обеспечивает пользователю достаточные гарантии того, что в устройстве отсутствуют встроенные закладки и бекдоры, позволяющие продавшему его злоумышленнику получить доступ к секретной информации.

#Как этим пользоваться

Готовое устройство с прошивкой подключается к копьютеру или смартфону (далее - Хосту) посредством USB кабеля или по bluetooth (при наличии поддержки выбранной платой)
На хост должно быть установлено совместимое с openHW програмное обеспечение (например, кошелек EmerAPI KeyKeeper)
Устройство может быть автоматически обнаружено или задано в настройках программы на хосте.

При первом подключении пользователю предлагается загрузить в openHW его приватный ключ (и, опционально, второй приватный ключ для схемы правдоподобного отрицания)
После загрузки ключа предлагается создать PIN код, защищающий приватный ключ в случае кражи устройства (и, опционально, второй пинкод для выдачи его под давлением)
Опционально можно установить Пароль шифрования приватного ключа, что привязывает openHW к конкретному хосту и делает невозможным получение приватного ключа в случае кражи устройства.

Далее, для осуществления любых операций, требующих использование приватного ключа (подписания транзаций и сообщений, инициация безопасного обмена по схеме ECDH, шифрования и дешифрования) будет требоваться подключить устройство к хосту и ввести PIN
Опционально, можно требовать нажатия аппаратной кнопки (если она существует на выбранной плате)

При работе по схеме без Пароля Шифрования ключ можно использовать на любом устройстве, где установлено совместимое программное обеспечение.
При работе по схеме с Паролем Шифрования ключ можно будет использовать только с одним хостом. При повреждении или краже устройства - хоста использование ключа станет невозможным (потребуется запрограммировать приватный ключ заново, как на новое устройство)

Схема с паролем шифрования является предпочтительной для хранения ценной информации. Не храните ключ и устройство - хост в одном месте, так как кража обоих устройств может с определенной вероятностью позволить пользователю завладеть секретной информацией.

Одному хосту может быть сопоставлено несколько ключей; один ключ может быть спарен с несколькими хостами.

Внимание! НЕ ИСПОЛЬЗУЙТЕ openHW ключ как единственное место хранения Вашего приватного ключа. Обязательно надежно сохраните копию мастер- пароля на бумаге в безопасном месте (можно по частям)

#Как это работает

##Хранение приватного ключа и его защита
Приватный ключ хранится в EEPROM (NVS при использовании чипов ESP) микроконтроллера и никогда не покидает его. Существует два режима хранения
1. Ключ хранится как есть. В этом случае при краже устройства существует техническая возможность физического вскрытия микросхемы и считывания ключа.
2. Ключ шифруется криптостойким способом на основании секрета, хранящегося на компьютере пользователя (Пароля). Этот пароль генерируется компьютером при инициализации кошелька и никогда не вводится вручную
Все криптографические операции с ключем осуществляются внутри микроконтроллера. Таким образом, даже если компьютер находится под контролем злоумышленика, перехват приватного ключа существенно усложняется.

Кроме того, в памяти микроконтроллера хранится ПИН (короткая строка из букв и цифр, рекомендуется 4 символа или более).
Для доступа к секретной информации требуется сообщить устройству верный PIN
Приватный ключ задаётся при инициализации кошелька командой SetPrivateKey(). 
В качестве второго параметра в эту функцию может быть передан второй приватный ключ для схемы правдоподобного отрицания (PD Private Key)

##Обмен данными с хостом
Устройство управляется хостом путем передачи текстовых команд.
Это может быть сделано через интерфейс USB (USB serial port), при наличии в плате модуля Bluetooth и поддержке этой фунции в прошивке - по bluetooth соединению.
Команды могут быть ограничены символами перевода строки или выдаваться спошным потоком.
Устройство отвечает строками, завершающимися символом \n
Это либо строки данных (с ответом на запрос), либо строка, начинающаяся с одной из сигнатур:
"OK: " (успех), "ERROR: " (ошибка), "PIN: " (запрос PIN), "PASSWORD: " (запрос пароля) , "BUTTON: " (запрос нажатия аппаратной кнопки на устройстве)
Более подробную информацию по командам можно получить, передав устройству команду "help"
Скорость порта по умолчанию - 115200

##Схемы защиты приватного ключа. Защита паролем

###The key to a plausible denial
Для защиты пользователя от насильственного требования выдачи PIN-кода (со стороны преступников или госудаственных служб) предусмотрен второй приватный ключ (PD) и соотвествующий ему второй PIN код (pin2)
При требовании со стороны преступников предоставить доступ к устройсву пользователь выдает PD пин (пин 2)
При его первом вводе устройство переключается в режим PD. В этом режиме
  * устройство разблокируется PIN2, при этом загружается PD private key
  * не существует способа определить что PIN является PD-PIN, а не обычным. Поведение устройства идентично нормальному.
  * для перехода устройства в стандартный режим верный пин должен быть введен не ранее чем через пять дней после подачи питания на устройство. Если верный ПИН введен ранее, устройство реагирует на него как на ошибочный.
Для полной надежности мы рекомендуем создать поддельную активность на PD адресе- перечислить на него монеты, создать какие-то цифровые активы.
При использовании PD НЕ СООБЩАЙТЕ НИКОМУ, ЧТО ИСПОЛЬЗУЕТЕ ДАННУЮ СХЕМУ!


Возможные атаки и способы защиты.
*1. Кража устройства и попытка подбора PIN- кода
	После каждой неверной попытки ввода ПИН время ожидания удваивается (начиная с 0.1 секунды).
	Таким образом, для перебора 10 PIN потребуется около 3 минут ожидания, для перебора 20 PIN - около двух суток, для 30 попыток уже будет нужно пять лет.
	При перезагрузке устройства во время ожидания для следующей попытки придется ждать вдвое больше.
	Таким образом, даже для PIN из четырех цифр вероятность подбора в течении года составляет примерно 0.3%
	Математическое ожидание времени взлома PIN из двух букв и цифр с учетом регистра (например, "Pd") составляет около года, что является вполне достаточным для обычного случая (злоумышленникам будет проще физически взломать чип)
*2. Кража устройства и последующий взлом чипа
	Все современные микроконтроллеры подвержены этому риску в той или иной степени. Если такой риск существует - Вы можете использовать схему хранения приватного ключа с паролем.
*3. Перехват данных, передаваемых между openHW и хостом
	Прослушивание передаваемых данных само по себе не очень опасно, однако может дать атакующему получить Пароль, а при последующей краже микроконтроллера - взломать чип и получить доступ к приватному ключу.
	Кроме того, при перехвате ввода ПИН (при схеме с вводом ПИН кода на компьютере) злоумышленник сможет получить доступ к секретным данным просто украв устройство.
	Если Вы предполагаете, что у злоумышленника была такая возможность (например, при использовании чужого или небезопасного компьютера, наличии неизвестных подозрительных устройств, кабелей и тп)- срочно смените ПИН и пароль шифрования на устройстве.
	Это сделает полученные сведения бесполезными для атакующего.
*4. Получение злоумышленником доступа к хосту
	Проблема создает все риски, описанные в предыдущем пункте, а в дополнение - создает для атакующего возможность подделать запросы и, введя пользователя в заблуждение, перевести его активы на адрес злоумышленника
	Не используйте ключ если есть подозрение что компьютер, на котором Вы его используете, небезопасен.
	Если зарегистрирован факт такого доступа- смените PIN и пароль на устройстве.
*5. Получение злоумышленником временного доступа к ключу
	Здесь рассматривается случай, когда у злоумышленника был временный анонимный доступ к устройству (например, устройство длительное время лежало в небезопасном месте без контроля, но не было украдено)
    Если установлен качественный случайный пин-код, у злоумышленника нет возможности получить доступ к секретной информации. Ключ нельзя скопировать (без физического вскрытия чипа, что можно сделать только в условиях специальной лаборатории без гарантии успеха), не зная PIN устройством нельзя воспользоваться
*6. Противодействие работе под давлением ("метод резинового шланга")
	для защиты от этой атаки предусмотрены PD private key и PD PIN
	Если злоумышленник угрожая насилием требует выдать ему PIN, пользователю следует выдать ему PD PIN (он должен быть заранее настроен в кошельке)
	В этом случае поведение устройства полностью идентично поведению при вводе подлинного ПИН, но приватный ключ (и адрес) будут другими (его требуется установить при инициализации устройства командой setPrivateKey()


Совместимое ПО

Рекомендации по выбору оборудования

Как воспользоваться

Как скомпилировать и загрузить прошивку

Предупреждение
ВНИМАНИЕ! Защита памянти некоторых чипов на настоящий момент моможет быть легко вскрыта путем физического воздействия на чип.
Хранение Ваших приватных ключей на таких чипах сравнима по безопасностю с хранением бумажки с паролем в запертом ящике.
При краже данного чипа следует немедленно перевести все активы на другой приватный ключ и прекратить использование старого.
Ниже приведен список небезопасных чипов
Чипы, о небезопасности которых неизвестно на момент написания этого документа:
ESP32
ESP8256